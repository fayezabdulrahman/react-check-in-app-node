# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build & Deploy Check-in Node CI/CD

on:
  push:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Build Docker Image
        run: |
          docker build --build-arg PORT=$(echo "${{ secrets.PROD_ENV_FILE }}" | grep "PORT" | cut -d '=' -f 2) /
          --build-arg TOKEN_SECRET_KEY=$(echo "${{ secrets.PROD_ENV_FILE }}" | grep "TOKEN_SECRET_KEY" | cut -d '=' -f 2) /
          --build-arg REFRESH_TOKEN_SECRET_KEY=$(echo "${{ secrets.PROD_ENV_FILE }}" | grep "REFRESH_TOKEN_SECRET_KEY" | cut -d '=' -f 2) /
          --build-arg MONGO_URL=$(echo "${{ secrets.PROD_ENV_FILE }}" | grep "MONGO_URL" | cut -d '=' -f 2) /
          -t ${{ secrets.DOCKER_USERNAME }}/ez-check-in-node-app .
      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/ez-check-in-node-app:latest

  deploy:
      needs: build
      runs-on: self-hosted # runs on aws-ec2
      steps:
        - name: Pull Docker Image
          run: docker pull ${{ secrets.DOCKER_USERNAME }}/ez-check-in-node-app:latest
        - name: Delete old container
          run: docker rm -f ez-check-in-node-app
        - name: Run Docker Container
          run: |
            docker run -d --network ezcheckin-network -p 9000:9000 \
            --name ez-check-in-node-app \
            ${{ secrets.DOCKER_USERNAME }}/ez-check-in-node-app
